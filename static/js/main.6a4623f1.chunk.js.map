{"version":3,"sources":["views/Login/index.js","views/Main/index.js","views/NotFound/index.js","route/index.js","store/spinner-store.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","className","Main","NotFound","routers","path","exact","component","createSlice","name","initialState","count","reducers","addAsyncCountValue","state","minusAsyncCountValue","reducer","actions","combineReducers","spinnerName","spinner","configureStore","devTools","process","middleware","getDefaultMiddleware","serializableCheck","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"2NAIeA,EAFD,kBAAM,qBAAKC,UAAU,GAAf,oBCELC,EAFF,kBAAM,qBAAKD,UAAU,GAAf,sBCIJE,EAJE,kBACf,qBAAKF,UAAU,GAAf,uBCGa,SAASG,IACtB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWL,IACjC,cAAC,IAAD,CAAOG,KAAK,SAASC,OAAK,EAACC,UAAWP,IACtC,cAAC,IAAD,CAAOO,UAAWJ,O,6BCTWK,YAAY,CAC7CC,KAAM,UACNC,aAAc,CAAEC,MAAO,GACvBC,SAAU,CACRC,mBADQ,SACWC,GACjB,MAAO,CAAEH,MAAOG,EAAMH,MAAQ,IAEhCI,qBAJQ,SAIaD,GACnB,MAAO,CAAEH,MAAOG,EAAMH,MAAQ,EAAIG,EAAMH,MAAQ,EAAIG,EAAMH,WARxDF,E,EAAAA,KAAMO,E,EAAAA,QAASC,E,EAAAA,QAcRD,GADsCC,EAA7CJ,mBAA6CI,EAAzBF,qBACbC,GCbFA,EAAUE,YAAgB,eACpCC,EAAcC,IAKFC,cAAe,CAC5BL,UACAM,UAAUC,EACVC,WAAYC,YAAqB,CAC/BC,mBAAmB,M,QCERC,MATf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,OCGSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUlB,SAAzB,SACE,cAAC,EAAD,QAGJmB,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.6a4623f1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Login = () => <div className=\"\">Login</div>;\n\nexport default Login;\n","import React from 'react';\n\nconst Main = () => <div className=\"\">Main!!!</div>;\n\nexport default Main;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"\">NotFound</div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from 'views/Login';\nimport Main from 'views/Main';\nimport NotFound from 'views/NotFound';\n\nexport default function routers() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst { name, reducer, actions } = createSlice({\r\n  name: 'spinner',\r\n  initialState: { count: 0 },\r\n  reducers: {\r\n    addAsyncCountValue(state) {\r\n      return { count: state.count + 1 };\r\n    },\r\n    minusAsyncCountValue(state) {\r\n      return { count: state.count > 0 ? state.count - 1 : state.count };\r\n    },\r\n  },\r\n});\r\n\r\nconst { addAsyncCountValue, minusAsyncCountValue } = actions;\r\nexport default reducer;\r\nexport { name, addAsyncCountValue, minusAsyncCountValue };\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport spinner, { name as spinnerName } from './spinner-store';\n\nexport const reducer = combineReducers({\n  [spinnerName]: spinner,\n});\n\nexport { spinnerName };\n\nexport default configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n","import React from 'react';\nimport './App.css';\nimport Router from 'route';\nimport store from 'store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}